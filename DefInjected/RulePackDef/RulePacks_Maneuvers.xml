<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>


	<Maneuver_Slash.rulePack.rulesStrings.0>damaged_inf(p=4)->slash</Maneuver_Slash.rulePack.rulesStrings.0>
	<Maneuver_Slash.rulePack.rulesStrings.1>damaged_inf->cut</Maneuver_Slash.rulePack.rulesStrings.1>
	<Maneuver_Slash.rulePack.rulesStrings.2>damaged_inf->chop</Maneuver_Slash.rulePack.rulesStrings.2>
	<Maneuver_Slash.rulePack.rulesStrings.3>damaged_inf->hack</Maneuver_Slash.rulePack.rulesStrings.3>
	<Maneuver_Slash.rulePack.rulesStrings.4>damaged_inf->slice</Maneuver_Slash.rulePack.rulesStrings.4>
	<Maneuver_Slash.rulePack.rulesStrings.5>damaged_inf->gash</Maneuver_Slash.rulePack.rulesStrings.5>

	<Maneuver_Slash.rulePack.rulesStrings.6>damaged(p=4)->slashed</Maneuver_Slash.rulePack.rulesStrings.6>
	<Maneuver_Slash.rulePack.rulesStrings.7>damaged->cut</Maneuver_Slash.rulePack.rulesStrings.7>
	<Maneuver_Slash.rulePack.rulesStrings.8>damaged->chopped</Maneuver_Slash.rulePack.rulesStrings.8>
	<Maneuver_Slash.rulePack.rulesStrings.9>damaged->hacked</Maneuver_Slash.rulePack.rulesStrings.9>
	<Maneuver_Slash.rulePack.rulesStrings.10>damaged->sliced</Maneuver_Slash.rulePack.rulesStrings.10>
	<Maneuver_Slash.rulePack.rulesStrings.11>damaged->gashed</Maneuver_Slash.rulePack.rulesStrings.11>

	<Maneuver_Slash.rulePack.rulesStrings.12>damaged_participle->slashing</Maneuver_Slash.rulePack.rulesStrings.12>
	<Maneuver_Slash.rulePack.rulesStrings.13>damaged_participle->cutting</Maneuver_Slash.rulePack.rulesStrings.13>
	<Maneuver_Slash.rulePack.rulesStrings.14>damaged_participle->slicing</Maneuver_Slash.rulePack.rulesStrings.14>
	<Maneuver_Slash.rulePack.rulesStrings.15>damaged_participle->gashing</Maneuver_Slash.rulePack.rulesStrings.15>
	<Maneuver_Slash.rulePack.rulesStrings.16>damaged_participle->tearing</Maneuver_Slash.rulePack.rulesStrings.16>
	<Maneuver_Slash.rulePack.rulesStrings.17>damaged_participle->lacerating</Maneuver_Slash.rulePack.rulesStrings.17>

	<Maneuver_Slash.rulePack.rulesStrings.18>woundname->wound</Maneuver_Slash.rulePack.rulesStrings.18>
	<Maneuver_Slash.rulePack.rulesStrings.19>woundname(p=0.3)->opening</Maneuver_Slash.rulePack.rulesStrings.19>
	<Maneuver_Slash.rulePack.rulesStrings.20>flavortextsituation(recipient_flesh!=Mechanoid)->with blood dripping from the [woundname]</Maneuver_Slash.rulePack.rulesStrings.20>
	<Maneuver_Slash.rulePack.rulesStrings.21>flavortextsituation->with fluids dripping from the [woundname]</Maneuver_Slash.rulePack.rulesStrings.21>
	<Maneuver_Slash.rulePack.rulesStrings.22>flavortextconsequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</Maneuver_Slash.rulePack.rulesStrings.22>
	<Maneuver_Slash.rulePack.rulesStrings.23>flavortextconsequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</Maneuver_Slash.rulePack.rulesStrings.23>
	<Maneuver_Slash.rulePack.rulesStrings.24>flavortextconsequence(recipient_flesh!=Mechanoid)->leaving a gory [woundname]</Maneuver_Slash.rulePack.rulesStrings.24>

	<Maneuver_Slash.rulePack.rulesStrings.25>destroyed->bisected</Maneuver_Slash.rulePack.rulesStrings.25>
	<Maneuver_Slash.rulePack.rulesStrings.26>destroyed->divided</Maneuver_Slash.rulePack.rulesStrings.26>
	<Maneuver_Slash.rulePack.rulesStrings.27>destroyed->halved</Maneuver_Slash.rulePack.rulesStrings.27>
	<Maneuver_Slash.rulePack.rulesStrings.28>destroyed->separated</Maneuver_Slash.rulePack.rulesStrings.28>
	<Maneuver_Slash.rulePack.rulesStrings.29>destroyed->split</Maneuver_Slash.rulePack.rulesStrings.29>

	<Maneuver_Slash.rulePack.rulesStrings.30>destroyed_participle->bisecting</Maneuver_Slash.rulePack.rulesStrings.30>
	<Maneuver_Slash.rulePack.rulesStrings.31>destroyed_participle->dividing</Maneuver_Slash.rulePack.rulesStrings.31>
	<Maneuver_Slash.rulePack.rulesStrings.32>destroyed_participle->halving</Maneuver_Slash.rulePack.rulesStrings.32>
	<Maneuver_Slash.rulePack.rulesStrings.33>destroyed_participle->separating</Maneuver_Slash.rulePack.rulesStrings.33>
	<Maneuver_Slash.rulePack.rulesStrings.34>destroyed_participle->splitting</Maneuver_Slash.rulePack.rulesStrings.34>

	<Maneuver_Slash.rulePack.rulesStrings.35>destroyed_suffix->into neat pieces</Maneuver_Slash.rulePack.rulesStrings.35>
	<Maneuver_Slash.rulePack.rulesStrings.36>destroyed_suffix->cleanly</Maneuver_Slash.rulePack.rulesStrings.36>
	<Maneuver_Slash.rulePack.rulesStrings.37>destroyed_suffix(target_part_destroyed_count==1)->exposing its inner workings</Maneuver_Slash.rulePack.rulesStrings.37>
	<Maneuver_Slash.rulePack.rulesStrings.38>destroyed_suffix(target_part_destroyed_count==1)->slicing it in twain</Maneuver_Slash.rulePack.rulesStrings.38>





	<Maneuver_Stab.rulePack.rulesStrings.0>damaged_inf(p=4)->stab</Maneuver_Stab.rulePack.rulesStrings.0>
	<Maneuver_Stab.rulePack.rulesStrings.1>damaged_inf->jab</Maneuver_Stab.rulePack.rulesStrings.1>
	<Maneuver_Stab.rulePack.rulesStrings.2>damaged_inf->pierce</Maneuver_Stab.rulePack.rulesStrings.2>
	<Maneuver_Stab.rulePack.rulesStrings.3>damaged_inf->puncture</Maneuver_Stab.rulePack.rulesStrings.3>
	<Maneuver_Stab.rulePack.rulesStrings.4>damaged_inf->skewer</Maneuver_Stab.rulePack.rulesStrings.4>
	<!-- <Maneuver_Stab.rulePack.rulesStrings.0>damaged_inf->penetrate</Maneuver_Stab.rulePack.rulesStrings.0> Doesn't work well with "Jimmy avoided Lilith's gladius penetrate"; disabled for now -->

	<Maneuver_Stab.rulePack.rulesStrings.5>damaged(p=4)->stabbed</Maneuver_Stab.rulePack.rulesStrings.5>
	<Maneuver_Stab.rulePack.rulesStrings.6>damaged->jabbed</Maneuver_Stab.rulePack.rulesStrings.6>
	<Maneuver_Stab.rulePack.rulesStrings.7>damaged->pierced</Maneuver_Stab.rulePack.rulesStrings.7>
	<Maneuver_Stab.rulePack.rulesStrings.8>damaged->punctured</Maneuver_Stab.rulePack.rulesStrings.8>
	<Maneuver_Stab.rulePack.rulesStrings.9>damaged->skewered</Maneuver_Stab.rulePack.rulesStrings.9>

	<Maneuver_Stab.rulePack.rulesStrings.10>damaged_participle->piercing</Maneuver_Stab.rulePack.rulesStrings.10>
	<Maneuver_Stab.rulePack.rulesStrings.11>damaged_participle->puncturing</Maneuver_Stab.rulePack.rulesStrings.11>
	<Maneuver_Stab.rulePack.rulesStrings.12>damaged_participle->penetrating</Maneuver_Stab.rulePack.rulesStrings.12>
	<Maneuver_Stab.rulePack.rulesStrings.13>damaged_participle->skewering</Maneuver_Stab.rulePack.rulesStrings.13>

	<Maneuver_Stab.rulePack.rulesStrings.14>woundname->hole</Maneuver_Stab.rulePack.rulesStrings.14>
	<Maneuver_Stab.rulePack.rulesStrings.15>woundname->wound</Maneuver_Stab.rulePack.rulesStrings.15>
	<Maneuver_Stab.rulePack.rulesStrings.16>woundname->crevice</Maneuver_Stab.rulePack.rulesStrings.16>
	<Maneuver_Stab.rulePack.rulesStrings.17>flavortextconsequence(recipient_flesh!=Mechanoid)->leaving a bloody [woundname]</Maneuver_Stab.rulePack.rulesStrings.17>
	<Maneuver_Stab.rulePack.rulesStrings.18>flavortextconsequence(recipient_flesh!=Mechanoid)->leaving a torn [woundname]</Maneuver_Stab.rulePack.rulesStrings.18>
	<Maneuver_Stab.rulePack.rulesStrings.19>flavortextconsequence(recipient_flesh!=Mechanoid)->leaving a bleeding [woundname]</Maneuver_Stab.rulePack.rulesStrings.19>

	<Maneuver_Stab.rulePack.rulesStrings.20>destroyed->impaled</Maneuver_Stab.rulePack.rulesStrings.20>
	<Maneuver_Stab.rulePack.rulesStrings.21>destroyed->perforated</Maneuver_Stab.rulePack.rulesStrings.21>
	<Maneuver_Stab.rulePack.rulesStrings.22>destroyed->skewered</Maneuver_Stab.rulePack.rulesStrings.22>

	<Maneuver_Stab.rulePack.rulesStrings.23>destroyed_participle->impaling</Maneuver_Stab.rulePack.rulesStrings.23>
	<Maneuver_Stab.rulePack.rulesStrings.24>destroyed_participle->perforating</Maneuver_Stab.rulePack.rulesStrings.24>
	<Maneuver_Stab.rulePack.rulesStrings.25>destroyed_participle->skewering</Maneuver_Stab.rulePack.rulesStrings.25>

	<Maneuver_Stab.rulePack.rulesStrings.26>destroyed_suffix->straight through</Maneuver_Stab.rulePack.rulesStrings.26>
	<Maneuver_Stab.rulePack.rulesStrings.27>destroyed_suffix->leaving a clean hole</Maneuver_Stab.rulePack.rulesStrings.27>
	<Maneuver_Stab.rulePack.rulesStrings.28>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->leaving it leaking gory fluids</Maneuver_Stab.rulePack.rulesStrings.28>
	<Maneuver_Stab.rulePack.rulesStrings.29>destroyed_suffix(target_part_destroyed_count==1)->leaving it leaking unrecognizable fluids</Maneuver_Stab.rulePack.rulesStrings.29>





	<Maneuver_Smash_Damage.rulePack.rulesStrings.0>damaged_inf(p=4)->smash</Maneuver_Smash_Damage.rulePack.rulesStrings.0>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.1>damaged_inf->bash</Maneuver_Smash_Damage.rulePack.rulesStrings.1>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.2>damaged_inf->clobber</Maneuver_Smash_Damage.rulePack.rulesStrings.2>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.3>damaged_inf->slam</Maneuver_Smash_Damage.rulePack.rulesStrings.3>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.4>damaged_inf->strike</Maneuver_Smash_Damage.rulePack.rulesStrings.4>

	<Maneuver_Smash_Damage.rulePack.rulesStrings.5>damaged(p=4)->smashed</Maneuver_Smash_Damage.rulePack.rulesStrings.5>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.6>damaged->bashed</Maneuver_Smash_Damage.rulePack.rulesStrings.6>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.7>damaged->clobbered</Maneuver_Smash_Damage.rulePack.rulesStrings.7>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.8>damaged->slammed</Maneuver_Smash_Damage.rulePack.rulesStrings.8>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.9>damaged->struck</Maneuver_Smash_Damage.rulePack.rulesStrings.9>

	<Maneuver_Smash_Damage.rulePack.rulesStrings.10>damaged_participle->smashing</Maneuver_Smash_Damage.rulePack.rulesStrings.10>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.11>damaged_participle->bashing</Maneuver_Smash_Damage.rulePack.rulesStrings.11>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.12>damaged_participle->clobbering</Maneuver_Smash_Damage.rulePack.rulesStrings.12>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.13>damaged_participle->bruising</Maneuver_Smash_Damage.rulePack.rulesStrings.13>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.14>damaged_participle->lacerating</Maneuver_Smash_Damage.rulePack.rulesStrings.14>

	<Maneuver_Smash_Damage.rulePack.rulesStrings.15>destroyed->shattered</Maneuver_Smash_Damage.rulePack.rulesStrings.15>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.16>destroyed->crushed</Maneuver_Smash_Damage.rulePack.rulesStrings.16>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.17>destroyed->obliterated</Maneuver_Smash_Damage.rulePack.rulesStrings.17>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.18>destroyed->annihilated</Maneuver_Smash_Damage.rulePack.rulesStrings.18>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.19>destroyed->broke</Maneuver_Smash_Damage.rulePack.rulesStrings.19>

	<Maneuver_Smash_Damage.rulePack.rulesStrings.20>destroyed_participle->shattering</Maneuver_Smash_Damage.rulePack.rulesStrings.20>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.21>destroyed_participle->crushing</Maneuver_Smash_Damage.rulePack.rulesStrings.21>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.22>destroyed_participle->obliterating</Maneuver_Smash_Damage.rulePack.rulesStrings.22>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.23>destroyed_participle->annihilating</Maneuver_Smash_Damage.rulePack.rulesStrings.23>
	<Maneuver_Smash_Damage.rulePack.rulesStrings.24>destroyed_participle->breaking</Maneuver_Smash_Damage.rulePack.rulesStrings.24>



	<Maneuver_Smash.rulePack.rulesStrings.0>flavortextconsequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</Maneuver_Smash.rulePack.rulesStrings.0>
	<Maneuver_Smash.rulePack.rulesStrings.1>flavortextconsequence->leaving the area visibly deformed</Maneuver_Smash.rulePack.rulesStrings.1>
	<Maneuver_Smash.rulePack.rulesStrings.2>flavortextconsequence->knocking [recipient_objective] off balance</Maneuver_Smash.rulePack.rulesStrings.2>
	<Maneuver_Smash.rulePack.rulesStrings.3>flavortextconsequence->knocking [recipient_objective] to the side</Maneuver_Smash.rulePack.rulesStrings.3>

	<Maneuver_Smash.rulePack.rulesStrings.4>destroyed_suffix->[to] pieces</Maneuver_Smash.rulePack.rulesStrings.4>
	<Maneuver_Smash.rulePack.rulesStrings.5>destroyed_suffix->[to] bits</Maneuver_Smash.rulePack.rulesStrings.5>
	<Maneuver_Smash.rulePack.rulesStrings.6>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</Maneuver_Smash.rulePack.rulesStrings.6>
	<Maneuver_Smash.rulePack.rulesStrings.7>destroyed_suffix->[to] fragments</Maneuver_Smash.rulePack.rulesStrings.7>





	<Maneuver_Scratch_Damage.rulePack.rulesStrings.0>damaged_inf(p=4)->scratch</Maneuver_Scratch_Damage.rulePack.rulesStrings.0>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.1>damaged_inf->lacerate</Maneuver_Scratch_Damage.rulePack.rulesStrings.1>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.2>damaged_inf->tear</Maneuver_Scratch_Damage.rulePack.rulesStrings.2>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.3>damaged_inf->cut</Maneuver_Scratch_Damage.rulePack.rulesStrings.3>

	<Maneuver_Scratch_Damage.rulePack.rulesStrings.4>damaged(p=4)->scratched</Maneuver_Scratch_Damage.rulePack.rulesStrings.4>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.5>damaged->lacerated</Maneuver_Scratch_Damage.rulePack.rulesStrings.5>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.6>damaged->tore</Maneuver_Scratch_Damage.rulePack.rulesStrings.6>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.7>damaged->cut</Maneuver_Scratch_Damage.rulePack.rulesStrings.7>

	<Maneuver_Scratch_Damage.rulePack.rulesStrings.8>damaged_participle->scratching</Maneuver_Scratch_Damage.rulePack.rulesStrings.8>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.9>damaged_participle->lacerating</Maneuver_Scratch_Damage.rulePack.rulesStrings.9>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.10>damaged_participle->tearing</Maneuver_Scratch_Damage.rulePack.rulesStrings.10>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.11>damaged_participle->cutting</Maneuver_Scratch_Damage.rulePack.rulesStrings.11>

	<Maneuver_Scratch_Damage.rulePack.rulesStrings.12>destroyed->mauled</Maneuver_Scratch_Damage.rulePack.rulesStrings.12>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.13>destroyed->lacerated</Maneuver_Scratch_Damage.rulePack.rulesStrings.13>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.14>destroyed->tore off</Maneuver_Scratch_Damage.rulePack.rulesStrings.14>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.15>destroyed->shredded</Maneuver_Scratch_Damage.rulePack.rulesStrings.15>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.16>destroyed->ripped</Maneuver_Scratch_Damage.rulePack.rulesStrings.16>

	<Maneuver_Scratch_Damage.rulePack.rulesStrings.17>destroyed_participle->mauling</Maneuver_Scratch_Damage.rulePack.rulesStrings.17>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.18>destroyed_participle->lacerating</Maneuver_Scratch_Damage.rulePack.rulesStrings.18>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.19>destroyed_participle->tearing off</Maneuver_Scratch_Damage.rulePack.rulesStrings.19>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.20>destroyed_participle->shredding</Maneuver_Scratch_Damage.rulePack.rulesStrings.20>
	<Maneuver_Scratch_Damage.rulePack.rulesStrings.21>destroyed_participle->ripping</Maneuver_Scratch_Damage.rulePack.rulesStrings.21>



	<Maneuver_Scratch.rulePack.rulesStrings.0>woundname->wound</Maneuver_Scratch.rulePack.rulesStrings.0>
	<Maneuver_Scratch.rulePack.rulesStrings.1>woundname(p=0.3)->opening</Maneuver_Scratch.rulePack.rulesStrings.1>

	<Maneuver_Scratch.rulePack.rulesStrings.2>flavortextsituation(recipient_flesh!=Mechanoid)->with blood dripping from the [woundname]</Maneuver_Scratch.rulePack.rulesStrings.2>
	<Maneuver_Scratch.rulePack.rulesStrings.3>flavortextsituation->with fluids dripping from the [woundname]</Maneuver_Scratch.rulePack.rulesStrings.3>
	<Maneuver_Scratch.rulePack.rulesStrings.4>flavortextconsequence(recipient_flesh!=Mechanoid)->and exposing the flesh underneath</Maneuver_Scratch.rulePack.rulesStrings.4>
	<Maneuver_Scratch.rulePack.rulesStrings.5>flavortextconsequence(recipient_flesh==Mechanoid)->and exposing the machinery underneath</Maneuver_Scratch.rulePack.rulesStrings.5>
	<Maneuver_Scratch.rulePack.rulesStrings.6>flavortextconsequence(recipient_flesh!=Mechanoid)->and leaving a gory [woundname]</Maneuver_Scratch.rulePack.rulesStrings.6>

	<Maneuver_Scratch.rulePack.rulesStrings.7>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</Maneuver_Scratch.rulePack.rulesStrings.7>
	<Maneuver_Scratch.rulePack.rulesStrings.8>destroyed_suffix->[to] strips</Maneuver_Scratch.rulePack.rulesStrings.8>
	<Maneuver_Scratch.rulePack.rulesStrings.9>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy pieces</Maneuver_Scratch.rulePack.rulesStrings.9>
	<Maneuver_Scratch.rulePack.rulesStrings.10>destroyed_suffix->[to] pieces</Maneuver_Scratch.rulePack.rulesStrings.10>
	<Maneuver_Scratch.rulePack.rulesStrings.11>destroyed_suffix->[to] fragments</Maneuver_Scratch.rulePack.rulesStrings.11>
	<Maneuver_Scratch.rulePack.rulesStrings.12>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a pile of gore</Maneuver_Scratch.rulePack.rulesStrings.12>



	<Poke.rulePack.rulesStrings.0>damaged_inf(p=2)->poke</Poke.rulePack.rulesStrings.0>
	<Poke.rulePack.rulesStrings.1>damaged_inf(p=2)->jab</Poke.rulePack.rulesStrings.1>
	<Poke.rulePack.rulesStrings.2>damaged_inf->prod</Poke.rulePack.rulesStrings.2>
	<Poke.rulePack.rulesStrings.3>damaged_inf->shove</Poke.rulePack.rulesStrings.3>
	<Poke.rulePack.rulesStrings.4>damaged_inf->stab</Poke.rulePack.rulesStrings.4>

	<Poke.rulePack.rulesStrings.5>damaged(p=2)->poked</Poke.rulePack.rulesStrings.5>
	<Poke.rulePack.rulesStrings.6>damaged(p=2)->jabbed</Poke.rulePack.rulesStrings.6>
	<Poke.rulePack.rulesStrings.7>damaged->prodded</Poke.rulePack.rulesStrings.7>
	<Poke.rulePack.rulesStrings.8>damaged->shoved</Poke.rulePack.rulesStrings.8>
	<Poke.rulePack.rulesStrings.9>damaged->stabbed</Poke.rulePack.rulesStrings.9>

	<Poke.rulePack.rulesStrings.10>damaged_participle(p=2)->poking</Poke.rulePack.rulesStrings.10>
	<Poke.rulePack.rulesStrings.11>damaged_participle(p=2)->jabbing</Poke.rulePack.rulesStrings.11>
	<Poke.rulePack.rulesStrings.12>damaged_participle->prodding</Poke.rulePack.rulesStrings.12>
	<Poke.rulePack.rulesStrings.13>damaged_participle->shoving</Poke.rulePack.rulesStrings.13>
	<Poke.rulePack.rulesStrings.14>damaged_participle->stabbing</Poke.rulePack.rulesStrings.14>

	<Poke.rulePack.rulesStrings.15>flavortextconsequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</Poke.rulePack.rulesStrings.15>
	<Poke.rulePack.rulesStrings.16>flavortextconsequence->leaving the area visibly deformed</Poke.rulePack.rulesStrings.16>
	<Poke.rulePack.rulesStrings.17>flavortextconsequence->knocking [recipient_objective] off balance</Poke.rulePack.rulesStrings.17>
	<Poke.rulePack.rulesStrings.18>flavortextconsequence->knocking [recipient_objective] to the side</Poke.rulePack.rulesStrings.18>

	<Poke.rulePack.rulesStrings.19>destroyed->shattered</Poke.rulePack.rulesStrings.19>
	<Poke.rulePack.rulesStrings.20>destroyed->crushed</Poke.rulePack.rulesStrings.20>
	<Poke.rulePack.rulesStrings.21>destroyed->obliterated</Poke.rulePack.rulesStrings.21>
	<Poke.rulePack.rulesStrings.22>destroyed->annihilated</Poke.rulePack.rulesStrings.22>
	<Poke.rulePack.rulesStrings.23>destroyed->broke</Poke.rulePack.rulesStrings.23>

	<Poke.rulePack.rulesStrings.24>destroyed_participle->shattering</Poke.rulePack.rulesStrings.24>
	<Poke.rulePack.rulesStrings.25>destroyed_participle->crushing</Poke.rulePack.rulesStrings.25>
	<Poke.rulePack.rulesStrings.26>destroyed_participle->obliterating</Poke.rulePack.rulesStrings.26>
	<Poke.rulePack.rulesStrings.27>destroyed_participle->annihilating</Poke.rulePack.rulesStrings.27>
	<Poke.rulePack.rulesStrings.28>destroyed_participle->breaking</Poke.rulePack.rulesStrings.28>

	<Poke.rulePack.rulesStrings.29>destroyed_suffix->[to] pieces</Poke.rulePack.rulesStrings.29>
	<Poke.rulePack.rulesStrings.30>destroyed_suffix->[to] bits</Poke.rulePack.rulesStrings.30>
	<Poke.rulePack.rulesStrings.31>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</Poke.rulePack.rulesStrings.31>
	<Poke.rulePack.rulesStrings.32>destroyed_suffix->[to] fragments</Poke.rulePack.rulesStrings.32>



	<Bite.rulePack.rulesStrings.0>damaged_inf->bite</Bite.rulePack.rulesStrings.0>
	<Bite.rulePack.rulesStrings.1>damaged_inf->chomp</Bite.rulePack.rulesStrings.1>
	<Bite.rulePack.rulesStrings.2>damaged_inf(p=0.5)->nip</Bite.rulePack.rulesStrings.2>

	<Bite.rulePack.rulesStrings.3>damaged->bit</Bite.rulePack.rulesStrings.3>
	<Bite.rulePack.rulesStrings.4>damaged->chomped</Bite.rulePack.rulesStrings.4>
	<Bite.rulePack.rulesStrings.5>damaged->nipped</Bite.rulePack.rulesStrings.5>
	<Bite.rulePack.rulesStrings.6>damaged->gnawed</Bite.rulePack.rulesStrings.6>
	<Bite.rulePack.rulesStrings.7>damaged->tore</Bite.rulePack.rulesStrings.7>

	<Bite.rulePack.rulesStrings.8>damaged_participle->biting</Bite.rulePack.rulesStrings.8>
	<Bite.rulePack.rulesStrings.9>damaged_participle->chomping</Bite.rulePack.rulesStrings.9>
	<Bite.rulePack.rulesStrings.10>damaged_participle->nipped</Bite.rulePack.rulesStrings.10>
	<Bite.rulePack.rulesStrings.11>damaged_participle->gnawing</Bite.rulePack.rulesStrings.11>
	<Bite.rulePack.rulesStrings.12>damaged_participle->tearing</Bite.rulePack.rulesStrings.12>

	<Bite.rulePack.rulesStrings.13>flavortextconsequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</Bite.rulePack.rulesStrings.13>
	<Bite.rulePack.rulesStrings.14>flavortextconsequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</Bite.rulePack.rulesStrings.14>
	<Bite.rulePack.rulesStrings.15>flavortextconsequence(recipient_flesh!=Mechanoid)->leaving grisly tears in the skin</Bite.rulePack.rulesStrings.15>
	<Bite.rulePack.rulesStrings.16>flavortextconsequence(recipient_flesh==Mechanoid)->leaving grisly tears in the metal</Bite.rulePack.rulesStrings.16>

	<Bite.rulePack.rulesStrings.17>destroyed->devoured</Bite.rulePack.rulesStrings.17>
	<Bite.rulePack.rulesStrings.18>destroyed->separated</Bite.rulePack.rulesStrings.18>
	<Bite.rulePack.rulesStrings.19>destroyed->ripped</Bite.rulePack.rulesStrings.19>
	<Bite.rulePack.rulesStrings.20>destroyed->ravaged</Bite.rulePack.rulesStrings.20>

	<Bite.rulePack.rulesStrings.21>destroyed_participle->devouring</Bite.rulePack.rulesStrings.21>
	<Bite.rulePack.rulesStrings.22>destroyed_participle->separating</Bite.rulePack.rulesStrings.22>
	<Bite.rulePack.rulesStrings.23>destroyed_participle->ripping</Bite.rulePack.rulesStrings.23>
	<Bite.rulePack.rulesStrings.24>destroyed_participle->ravaging</Bite.rulePack.rulesStrings.24>

	<Bite.rulePack.rulesStrings.25>destroyed_suffix->[to] shreds</Bite.rulePack.rulesStrings.25>
	<!-- How's his wife holding up? -->
	<Bite.rulePack.rulesStrings.26>destroyed_suffix->[to] pieces</Bite.rulePack.rulesStrings.26>
	<Bite.rulePack.rulesStrings.27>destroyed_suffix->[to] strips</Bite.rulePack.rulesStrings.27>
	<Bite.rulePack.rulesStrings.28>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</Bite.rulePack.rulesStrings.28>
	<Bite.rulePack.rulesStrings.29>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] an unrecognizable mess</Bite.rulePack.rulesStrings.29>



</LanguageData>
